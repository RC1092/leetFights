{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"R:\\\\leetFights\\\\client\\\\src\\\\topBar.js\";\nimport React from 'react';\nimport Countdown from 'react-countdown';\nimport Logo from './Logo2.jpg';\nimport './topbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Topbar = ({\n  state\n}) => {\n  const renderer = ({\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed message\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Time's up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 18\n      }, this);\n    } else {\n      // Render the countdown timer with only minutes and seconds\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minutes\",\n          children: [minutes, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seconds\",\n          children: [seconds, \" sec\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo,\n      alt: \"LOGO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n      date: state == null ? Date.now() + 300000 : Date.now(),\n      renderer: renderer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["_jsxFileName","React","Countdown","Logo","jsxDEV","_jsxDEV","Topbar","state","renderer","minutes","seconds","completed","children","fileName","lineNumber","columnNumber","className","src","alt","date","Date","now","_c","$RefreshReg$"],"sources":["R:/leetFights/client/src/topBar.js"],"sourcesContent":["'use strict';\r\nimport React from 'react';\r\nimport Countdown from 'react-countdown';\r\nimport Logo from './Logo2.jpg';\r\nimport './topbar.css';\r\nconst Topbar = ({state}) => {\r\n    const renderer = ({ minutes, seconds, completed }) => {\r\n        if (completed) {\r\n          // Render a completed message\r\n          return <span>Time's up!</span>;\r\n        } else {\r\n          // Render the countdown timer with only minutes and seconds\r\n          return (\r\n            <div className=\"timer\">\r\n            <span className=\"minutes\">{minutes} min</span>\r\n            <span className=\"seconds\">{seconds} sec</span>\r\n          </div>\r\n          );\r\n        }\r\n      };\r\n    return (\r\n        <div className=\"topbar\">\r\n            <img src={Logo} alt='LOGO' ></img>\r\n            <Countdown date={state == null ? Date.now() + 300000 : Date.now()} renderer={renderer}/>,\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Topbar;\r\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;AACb,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtB,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EACxB,MAAMC,QAAQ,GAAGA,CAAC;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAU,CAAC,KAAK;IAClD,IAAIA,SAAS,EAAE;MACb;MACA,oBAAON,OAAA;QAAAO,QAAA,EAAM;MAAU;QAAAC,QAAA,EAAAb,YAAA;QAAAc,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAChC,CAAC,MAAM;MACL;MACA,oBACEV,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAJ,QAAA,gBACtBP,OAAA;UAAMW,SAAS,EAAC,SAAS;UAAAJ,QAAA,GAAEH,OAAO,EAAC,MAAI;QAAA;UAAAI,QAAA,EAAAb,YAAA;UAAAc,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9CV,OAAA;UAAMW,SAAS,EAAC,SAAS;UAAAJ,QAAA,GAAEF,OAAO,EAAC,MAAI;QAAA;UAAAG,QAAA,EAAAb,YAAA;UAAAc,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAF,QAAA,EAAAb,YAAA;QAAAc,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAER;EACF,CAAC;EACH,oBACIV,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAJ,QAAA,gBACnBP,OAAA;MAAKY,GAAG,EAAEd,IAAK;MAACe,GAAG,EAAC;IAAM;MAAAL,QAAA,EAAAb,YAAA;MAAAc,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClCV,OAAA,CAACH,SAAS;MAACiB,IAAI,EAAEZ,KAAK,IAAI,IAAI,GAAGa,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAE;MAACb,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAb,YAAA;MAAAc,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAC5F;EAAA;IAAAF,QAAA,EAAAb,YAAA;IAAAc,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAACO,EAAA,GArBIhB,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}