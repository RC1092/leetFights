{"ast":null,"code":"var _jsxFileName = \"R:\\\\leetFights\\\\client\\\\src\\\\codeArea.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport Editor from \"@monaco-editor/react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst files = {\n  \"script.py\": {\n    name: \"script.py\",\n    language: \"python\",\n    value: \"Here is some python text\"\n  },\n  \"code.js\": {\n    name: \"code.js\",\n    language: \"javascript\",\n    value: \"Enter your javascript code\"\n  }\n};\nfunction EditArea() {\n  _s();\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\n  const editorRef = useRef(null);\n  const file = files[fileName];\n  // files[\"script.py\"] -> file -> name, language, value -> pass those to the editor\n\n  // it will take up the full width / height of its container (width: 100%, height: 100%)\n  // editors of any size\n  // full screen, embed type size\n\n  // 1. Be able to change from 1 file to the next\n  // 2. Get the value of the Monaco editor\n\n  // a file path (name), a language, a default value\n\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor;\n  }\n  function getEditorValue() {\n    alert(editorRef.current.getValue());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFileName(\"index.html\"),\n      children: \"Switch to index.html\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFileName(\"script.py\"),\n      children: \"Switch to javascript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getEditorValue(),\n      children: \"Get Editor Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"80vh\",\n      width: \"100vh\",\n      theme: \"vs-dark\",\n      onMount: handleEditorDidMount,\n      path: file.name,\n      defaultLanguage: file.language,\n      defaultValue: file.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(EditArea, \"1uFTzcXOTOfx1S4xH3XE+F3DJHo=\");\n_c = EditArea;\nexport default EditArea;\nvar _c;\n$RefreshReg$(_c, \"EditArea\");","map":{"version":3,"names":["useState","useRef","Editor","jsxDEV","_jsxDEV","files","name","language","value","EditArea","_s","fileName","setFileName","editorRef","file","handleEditorDidMount","editor","monaco","current","getEditorValue","alert","getValue","className","children","onClick","_jsxFileName","lineNumber","columnNumber","height","width","theme","onMount","path","defaultLanguage","defaultValue","_c","$RefreshReg$"],"sources":["R:/leetFights/client/src/codeArea.js"],"sourcesContent":["import { useState, useRef } from 'react'\r\n\r\nimport Editor from \"@monaco-editor/react\"\r\nimport './App.css'\r\n\r\nconst files = {\r\n  \"script.py\": {\r\n    name: \"script.py\",\r\n    language: \"python\",\r\n    value: \"Here is some python text\"\r\n  },\r\n  \"code.js\": {\r\n    name: \"code.js\",\r\n    language: \"javascript\",\r\n    value: \"Enter your javascript code\"\r\n  }\r\n}\r\n\r\nfunction EditArea() {\r\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\r\n  const editorRef = useRef(null);\r\n  const file = files[fileName];\r\n  // files[\"script.py\"] -> file -> name, language, value -> pass those to the editor\r\n\r\n  // it will take up the full width / height of its container (width: 100%, height: 100%)\r\n  // editors of any size\r\n  // full screen, embed type size\r\n\r\n  // 1. Be able to change from 1 file to the next\r\n  // 2. Get the value of the Monaco editor\r\n\r\n  // a file path (name), a language, a default value\r\n\r\n  function handleEditorDidMount(editor, monaco) {\r\n    editorRef.current = editor;\r\n  }\r\n\r\n  function getEditorValue() {\r\n    alert(editorRef.current.getValue());\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={() => setFileName(\"index.html\")}>\r\n        Switch to index.html\r\n      </button>\r\n      <button onClick={() => setFileName(\"script.py\")}>\r\n        Switch to javascript\r\n      </button>\r\n      <button onClick={() => getEditorValue()}>\r\n        Get Editor Value\r\n      </button>\r\n      <Editor\r\n        height=\"80vh\"\r\n        width=\"100vh\"\r\n        theme=\"vs-dark\"\r\n        onMount={handleEditorDidMount}\r\n        path={file.name}\r\n        defaultLanguage={file.language}\r\n        defaultValue={file.value}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditArea"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAExC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,KAAK,GAAG;EACZ,WAAW,EAAE;IACXC,IAAI,EAAE,WAAW;IACjBC,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE;EACT,CAAC;EACD,SAAS,EAAE;IACTF,IAAI,EAAE,SAAS;IACfC,QAAQ,EAAE,YAAY;IACtBC,KAAK,EAAE;EACT;AACF,CAAC;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EACvD,MAAMa,SAAS,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMa,IAAI,GAAGT,KAAK,CAACM,QAAQ,CAAC;EAC5B;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA,SAASI,oBAAoBA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC5CJ,SAAS,CAACK,OAAO,GAAGF,MAAM;EAC5B;EAEA,SAASG,cAAcA,CAAA,EAAG;IACxBC,KAAK,CAACP,SAAS,CAACK,OAAO,CAACG,QAAQ,CAAC,CAAC,CAAC;EACrC;EAEA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC,YAAY,CAAE;MAAAW,QAAA,EAAC;IAElD;MAAAZ,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC,WAAW,CAAE;MAAAW,QAAA,EAAC;IAEjD;MAAAZ,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAML,cAAc,CAAC,CAAE;MAAAI,QAAA,EAAC;IAEzC;MAAAZ,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA,CAACF,MAAM;MACL0B,MAAM,EAAC,MAAM;MACbC,KAAK,EAAC,OAAO;MACbC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEhB,oBAAqB;MAC9BiB,IAAI,EAAElB,IAAI,CAACR,IAAK;MAChB2B,eAAe,EAAEnB,IAAI,CAACP,QAAS;MAC/B2B,YAAY,EAAEpB,IAAI,CAACN;IAAM;MAAAG,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAhB,QAAA,EAAAc,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CA7CQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}