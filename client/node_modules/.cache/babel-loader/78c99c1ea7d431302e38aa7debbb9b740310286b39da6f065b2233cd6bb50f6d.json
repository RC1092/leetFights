{"ast":null,"code":"var _jsxFileName = \"R:\\\\leetFights\\\\client\\\\src\\\\fightPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport Topbar from './topBar';\nimport Editor from \"@monaco-editor/react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar problemName = \"\";\nvar problemId = 0;\nlet files = {\n  \"script.py\": {\n    name: \"script.py\",\n    language: \"python\"\n  },\n  \"code.js\": {\n    name: \"code.js\",\n    language: \"javascript\"\n  }\n};\nfunction EditArea({\n  id,\n  name\n}) {\n  _s();\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\n  const editorRef = useRef(null);\n  const file = files[fileName];\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor;\n  }\n  async function getEditorValue() {\n    const formData = {\n      text: editorRef.current.getValue(),\n      lang: files[fileName].language,\n      Qid: id,\n      PName: name\n    };\n    console.log(JSON.stringify(formData));\n    try {\n      const response = await fetch('http://localhost:8000/solution/checkSol', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log(response.json());\n      } else {\n        console.error('Failed to send data');\n      }\n    } catch (error) {\n      console.error('Error sending data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFileName(\"script.py\"),\n        className: \"buttons\",\n        children: \"Switch to python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFileName(\"code.js\"),\n        children: \"Switch to javascript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getEditorValue(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"75vh\",\n        width: \"110vh\",\n        theme: \"vs-dark\",\n        onMount: handleEditorDidMount,\n        path: file.name,\n        defaultLanguage: file.language,\n        defaultValue: file.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(EditArea, \"1uFTzcXOTOfx1S4xH3XE+F3DJHo=\");\n_c = EditArea;\nconst fetchData = async setData => {\n  try {\n    var num = Math.floor(Math.random() * 50);\n    //console.log(num);\n    const name = await axios.get(`http://localhost:8000/check/${num}`);\n    problemName = name.data.titleSlug;\n    problemId = name.data.frontendQuestionId;\n    const responseSnipp = await axios.post(`http://localhost:8000/questionSnippets/${problemName}`);\n    console.log(responseSnipp);\n    files['code.js'].value = responseSnipp.data[6].code;\n    files['script.py'].value = responseSnipp.data[3].code;\n    const response = await axios.get(`http://localhost:8000/questionData/${name.data.titleSlug}/${name.data.frontendQuestionId}`);\n    setData(response.data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\nfunction FightPage() {\n  _s2();\n  const [data, setData] = useState(false);\n  useEffect(() => {\n    fetchData(setData);\n  }, []);\n  if (data === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: data\n        },\n        className: \"standardDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"standardDiv\",\n        children: /*#__PURE__*/_jsxDEV(EditArea, {\n          id: problemId,\n          name: problemName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s2(FightPage, \"FYvpSgpOfHbfGKdfG1CU+aSd9pE=\");\n_c2 = FightPage;\nexport default FightPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditArea\");\n$RefreshReg$(_c2, \"FightPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Topbar","Editor","jsxDEV","_jsxDEV","problemName","problemId","files","name","language","EditArea","id","_s","fileName","setFileName","editorRef","file","handleEditorDidMount","editor","monaco","current","getEditorValue","formData","text","getValue","lang","Qid","PName","console","log","JSON","stringify","response","fetch","method","headers","body","ok","json","error","children","onClick","className","_jsxFileName","lineNumber","columnNumber","height","width","theme","onMount","path","defaultLanguage","defaultValue","value","_c","fetchData","setData","num","Math","floor","random","get","data","titleSlug","frontendQuestionId","responseSnipp","post","code","FightPage","_s2","dangerouslySetInnerHTML","__html","_c2","$RefreshReg$"],"sources":["R:/leetFights/client/src/fightPage.js"],"sourcesContent":["import React, { useEffect ,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Topbar from './topBar';\r\nimport Editor from \"@monaco-editor/react\"\r\nimport \"./App.css\"\r\n\r\n\r\n\r\nvar problemName = \"\";\r\nvar problemId = 0;\r\nlet files = {\r\n  \"script.py\": {\r\n    name: \"script.py\",\r\n    language: \"python\",\r\n   \r\n  },\r\n  \"code.js\": {\r\n    name: \"code.js\",\r\n    language: \"javascript\",\r\n  }\r\n}\r\n\r\nfunction EditArea({id , name}) {\r\n\r\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\r\n  const editorRef = useRef(null);\r\n  const file = files[fileName];\r\n\r\n  function handleEditorDidMount(editor, monaco) {\r\n    editorRef.current = editor;\r\n  }\r\n\r\n  async function getEditorValue (){\r\n    const formData = {\r\n      text:editorRef.current.getValue(),\r\n      lang:files[fileName].language,\r\n      Qid:id,\r\n      PName: name\r\n    };\r\n    console.log(JSON.stringify(formData));\r\n    try {\r\n      const response = await fetch('http://localhost:8000/solution/checkSol', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n          console.log(response.json());\r\n      } else {\r\n          console.error('Failed to send data');\r\n      }\r\n  } catch (error) {\r\n      console.error('Error sending data:', error);\r\n  }\r\n    \r\n  }\r\n\r\n  return (   \r\n    <div>\r\n      <div>\r\n      <button onClick={() => setFileName(\"script.py\")} className='buttons'>\r\n        Switch to python\r\n      </button>\r\n      <button onClick={() => setFileName(\"code.js\")}>\r\n        Switch to javascript\r\n      </button>\r\n      <button onClick={() => getEditorValue()}>\r\n        Submit\r\n      </button>\r\n      \r\n      <Editor\r\n        height=\"75vh\"\r\n        width=\"110vh\"\r\n        theme=\"vs-dark\"\r\n        onMount={handleEditorDidMount}\r\n        path={file.name}\r\n        defaultLanguage={file.language}\r\n        defaultValue={file.value}\r\n      />\r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nconst fetchData = async (setData) => {\r\n  try {\r\n  \r\n    var num = Math.floor(Math.random()*50);\r\n      //console.log(num);\r\n      const name = await axios.get(`http://localhost:8000/check/${num}`);\r\n      problemName = name.data.titleSlug;\r\n      problemId = name.data.frontendQuestionId;\r\n      \r\n      const responseSnipp = await axios.post(`http://localhost:8000/questionSnippets/${problemName}`);\r\n      console.log(responseSnipp)\r\n      files['code.js'].value = responseSnipp.data[6].code;\r\n      files['script.py'].value = responseSnipp.data[3].code;\r\n      const response = await axios.get(`http://localhost:8000/questionData/${name.data.titleSlug}/${name.data.frontendQuestionId}`);\r\n\r\n      setData(response.data);\r\n  } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n  }\r\n};\r\n\r\nfunction FightPage(){\r\n    const [data, setData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchData(setData);\r\n    }, []);\r\n\r\n    if(data === false){\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n        <Topbar />\r\n        <div className='mainArea'>\r\n        <div dangerouslySetInnerHTML={{ __html: data }} className='standardDiv' />\r\n        <div className='standardDiv'><EditArea id={problemId} name={problemName} ></EditArea></div>\r\n        </div>\r\n         </div>\r\n    )\r\n  \r\n}\r\n\r\n\r\n\r\nexport default FightPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}