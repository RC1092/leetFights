{"ast":null,"code":"var _jsxFileName = \"R:\\\\leetFights\\\\client\\\\src\\\\codeArea.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Editor from \"@monaco-editor/react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet files = {\n  \"script.py\": {\n    name: \"script.py\",\n    language: \"python3\",\n    value: \"Here is some python text\"\n  },\n  \"code.js\": {\n    name: \"code.js\",\n    language: \"javascript\",\n    value: \"Enter your javascript code\"\n  }\n};\nconst fetchData = async (problemName, setData) => {\n  try {\n    const response = await axios.get(`http://localhost:8000/questionData/${name.data.titleSlug}`);\n    console.log(response);\n    setData(response.data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\nfunction EditArea({\n  id,\n  name\n}) {\n  _s();\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\n  const editorRef = useRef(null);\n  const file = files[fileName];\n  // files[\"script.py\"] -> file -> name, language, value -> pass those to the editor\n\n  // it will take up the full width / height of its container (width: 100%, height: 100%)\n  // editors of any size\n  // full screen, embed type size\n\n  // 1. Be able to change from 1 file to the next\n  // 2. Get the value of the Monaco editor\n\n  // a file path (name), a language, a default value\n\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor;\n  }\n  async function getEditorValue() {\n    const formData = {\n      text: editorRef.current.getValue(),\n      lang: files[fileName].language,\n      Qid: id,\n      PName: name\n    };\n    console.log(JSON.stringify(formData));\n    try {\n      const response = await fetch('http://localhost:8000/solution/checkSol', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log('Data sent successfully');\n      } else {\n        console.error('Failed to send data');\n      }\n    } catch (error) {\n      console.error('Error sending data:', error);\n    }\n  }\n  console.log(Snippets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFileName(\"script.py\"),\n        children: \"Switch to python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFileName(\"code.js\"),\n        children: \"Switch to javascript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"70vh\",\n        width: \"90vh\",\n        theme: \"vs-dark\",\n        onMount: handleEditorDidMount,\n        path: file.name,\n        defaultLanguage: file.language,\n        defaultValue: file.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getEditorValue(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(EditArea, \"1uFTzcXOTOfx1S4xH3XE+F3DJHo=\");\n_c = EditArea;\nexport default EditArea;\nvar _c;\n$RefreshReg$(_c, \"EditArea\");","map":{"version":3,"names":["useState","useRef","BrowserRouter","Routes","Route","Editor","jsxDEV","_jsxDEV","files","name","language","value","fetchData","problemName","setData","response","axios","get","data","titleSlug","console","log","error","EditArea","id","_s","fileName","setFileName","editorRef","file","handleEditorDidMount","editor","monaco","current","getEditorValue","formData","text","getValue","lang","Qid","PName","JSON","stringify","fetch","method","headers","body","ok","Snippets","className","children","onClick","_jsxFileName","lineNumber","columnNumber","height","width","theme","onMount","path","defaultLanguage","defaultValue","_c","$RefreshReg$"],"sources":["R:/leetFights/client/src/codeArea.js"],"sourcesContent":["import { useState, useRef } from 'react'\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Editor from \"@monaco-editor/react\"\r\nimport './App.css'\r\n\r\nlet files = {\r\n  \"script.py\": {\r\n    name: \"script.py\",\r\n    language: \"python3\",\r\n    value: \"Here is some python text\"\r\n  },\r\n  \"code.js\": {\r\n    name: \"code.js\",\r\n    language: \"javascript\",\r\n    value: \"Enter your javascript code\"\r\n  }\r\n}\r\n\r\nconst fetchData = async (problemName,setData) => {\r\n  try {\r\n            \r\n      const response = await axios.get(`http://localhost:8000/questionData/${name.data.titleSlug}`);\r\n      console.log(response)\r\n      setData(response.data);\r\n  } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n  }\r\n};\r\n\r\nfunction EditArea({id , name}) {\r\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\r\n  const editorRef = useRef(null);\r\n  const file = files[fileName];\r\n  // files[\"script.py\"] -> file -> name, language, value -> pass those to the editor\r\n\r\n  // it will take up the full width / height of its container (width: 100%, height: 100%)\r\n  // editors of any size\r\n  // full screen, embed type size\r\n\r\n  // 1. Be able to change from 1 file to the next\r\n  // 2. Get the value of the Monaco editor\r\n\r\n  // a file path (name), a language, a default value\r\n\r\n  function handleEditorDidMount(editor, monaco) {\r\n    editorRef.current = editor;\r\n  }\r\n\r\n  async function getEditorValue (){\r\n    const formData = {\r\n      text:editorRef.current.getValue(),\r\n      lang:files[fileName].language,\r\n      Qid:id,\r\n      PName: name\r\n    };\r\n    console.log(JSON.stringify(formData));\r\n    try {\r\n      const response = await fetch('http://localhost:8000/solution/checkSol', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n          console.log('Data sent successfully');\r\n      } else {\r\n          console.error('Failed to send data');\r\n      }\r\n  } catch (error) {\r\n      console.error('Error sending data:', error);\r\n  }\r\n    \r\n  }\r\n  console.log(Snippets);\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <div>\r\n      <button onClick={() => setFileName(\"script.py\")}>\r\n        Switch to python\r\n      </button>\r\n      <button onClick={() => setFileName(\"code.js\")}>\r\n        Switch to javascript\r\n      </button>\r\n      \r\n      <Editor\r\n        height=\"70vh\"\r\n        width=\"90vh\"\r\n        theme=\"vs-dark\"\r\n        onMount={handleEditorDidMount}\r\n        path={file.name}\r\n        defaultLanguage={file.language}\r\n        defaultValue={file.value}\r\n      />\r\n      </div>\r\n      <button onClick={() => getEditorValue()}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditArea"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}